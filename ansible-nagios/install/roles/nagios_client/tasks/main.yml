---
# install and setup NRPE and checks

- name: Check Operating System
  fail:
    msg="You're not running a supported operating system (CentOS, RHEL 7+, Fedora or FreeBSD)"
  when: ((ansible_os_family != "RedHat" or ansible_os_family != "FreeBSD")
          and (ansible_distribution_major_version|int < 6))

- name: Import EPEL GPG Key
  rpm_key: key=https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
    state=present
  become: true
  when: ansible_distribution_major_version|int == 7 and ansible_os_family == "RedHat"

- name: Import EPEL GPG Key
  rpm_key: key=https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6
    state=present
  become: true
  when: ansible_distribution_major_version|int == 6 and ansible_os_family == "RedHat"

- name: Check for EPEL repo
  yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    state=present
  become: true
  when: ansible_distribution_major_version|int == 7 and ansible_os_family == "RedHat"

- name: Check for EPEL repo
  yum: name=https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
    state=present
  become: true
  when: ansible_distribution_major_version|int == 6 and ansible_os_family == "RedHat"

- name: Symlink Python to Python3 for EL8/Fedora
  file:
    src: /usr/bin/python3
    dest: /usr/bin/python
    state: link
  when: ansible_distribution_major_version|int >= 8 and ansible_python_version|int < 3.6
          and ansible_system == "Linux" and ansible_os_family == "RedHat"
  ignore_errors: true

- name: Switch to Python3 by Default (Fedora/EL8)
  command: alternatives --install /usr/bin/python python /usr/bin/python3 1
  when: ansible_python_version|int < 3.6 and ansible_distribution_major_version|int >= 8
        and ansible_system == "Linux" and ansible_os_family == "RedHat"

- name: Install NRPE and Common Plugins
  yum:
    name: ['nrpe', 'nagios-plugins-load', 'nagios-plugins-uptime', 'nagios-plugins-swap', 'nagios-plugins-procs',
    'nagios-plugins-users', 'nagios-plugins-disk', 'nagios-plugins-tcp']
    state: present
  become: true
  when: ansible_distribution_major_version|int <= 7 and ansible_os_family == "RedHat"

- name: Install NRPE and Common Plugins for Debian/Ubuntu
  apt:
    name: ['python3-apt', 'nagios-nrpe-server', 'nagios-plugins-common', 'nagios-plugins-basic', 'nagios-plugins-standard', 'python-pymongo']
    state: present
    update_cache: yes
    force: yes
  become: true
  when: ansible_distribution_major_version|int >= 14 and ansible_os_family == "Debian"

- name: Install NRPE and Common Plugins for Fedora/EL8
  dnf:
    name: ['nrpe', 'nagios-plugins-load', 'nagios-plugins-uptime', 'nagios-plugins-swap', 'nagios-plugins-procs',
    'nagios-plugins-users', 'nagios-plugins-disk', 'nagios-plugins-tcp']
    state: present
  become: true
  when: ansible_distribution_major_version|int >= 8 and ansible_system == "Linux" and ansible_os_family == "RedHat"

- name: Check if BSD ports structure exists
  stat:
    path: /usr/ports/net-mgmt/nagios-plugins/distinfo
  when: ansible_system == "FreeBSD"
  register: bsd_ports_structure
  ignore_errors: true

- name: Fetch new BSD ports tree, this might take a while.
  command: portsnap auto
  become: true
  when: ansible_system == "FreeBSD" and bsd_ports_structure.stat.exists

- name: Install NRPE and Common Plugins for FreeBSD, this might take a while.
  pkgng:
    name: ['nrpe3', 'nagios-plugins']
  become: true
  when: ansible_system == "FreeBSD"

- name: Install libsemanage-python
  yum:
    name: ['libsemanage-python']
    state: present
  become: true
  when: ansible_distribution_major_version|int <= 7 and ansible_os_family == "RedHat"
  ignore_errors: true

- name: Setup NRPE client configuration
  template:
    src=nrpe.cfg.j2
    dest=/etc/nagios/nrpe.cfg
    force=yes
  become: true
  when: ansible_system == "Linux" and ansible_os_family == "RedHat"
  notify:
    - ReStart NRPE service RedHat6
    - ReStart NRPE service RedHat7+

- name: Setup NRPE client configuration for Debian/Ubuntu
  template:
    src=nrpe_debian.cfg.j2
    dest=/etc/nagios/nrpe.cfg
    force=yes
  become: true
  when: ansible_system == "Linux" and ansible_os_family == "Debian"
  notify:
    - ReStart NRPE service Ubuntu14
    - ReStart NRPE service Ubuntu16+

- name: Setup NRPE client configuration on FreeBSD
  template:
    src=nrpe.cfg.j2
    dest=/usr/local/etc/nrpe.cfg
    force=yes
  become: true
  when: ansible_system == "FreeBSD"
  notify:
    - ReStart NRPE service FreeBSD

- name: Copy Common plugins for Debian
  copy:
    src="Common/"
    dest="/usr/lib/nagios/plugins"
    mode="a+x"
  become: true
  when: ansible_system == "Linux" and ansible_os_family == "Debian"

- name: Copy Common plugins for RedHat
  copy:
    src="Common/"
    dest="/usr/lib64/nagios/plugins"
    mode="a+x"
  become: true
  when: ansible_system == "Linux" and ansible_os_family == "RedHat"

- name: Copy Common plugins for FreeBSD
  copy:
    src="Common/"
    dest="/usr/local/libexec/nagios"
    mode="a+x"
  become: true
  when: ansible_system == "FreeBSD"

- name: Copy uptime check tool for FreeBSD
  copy:
    src=bsd_check_uptime.sh
    dest=/usr/local/libexec/nagios/bsd_check_uptime
    mode="a+x"
  become: true
  when: ansible_system == "FreeBSD"

- name: Copy Custom Nagios Plugins for Debian/Ubuntu
  copy:
    src="Debian/"
    dest="/usr/lib/nagios/plugins"
    mode="a+x"
  become: true
  when: ansible_system == "Linux" and ansible_os_family == "Debian"

- name: Copy Custom Nagios Plugins for RedHat
  copy:
    src="RedHat/"
    dest="/usr/lib64/nagios/plugins"
    mode="a+x"
  become: true
  when: ansible_system == "Linux" and ansible_os_family == "RedHat"

- name: Copy Custom Nagios Plugins for FreeBSD
  copy:
    src="FreeBSD/"
    dest="/usr/local/libexec/nagios"
    mode="a+x"
  become: true
  when: ansible_system == "FreeBSD"

# SELinux boolean for nagios
- name: Apply SELinux boolean nagios_run_sudo
  seboolean: name=nagios_run_sudo state=yes persistent=yes
  ignore_errors: true
  when: ansible_distribution_major_version|int <= 7
  become: true

# SELinux boolean for nagios
- name: Apply SELinux boolean logging_syslogd_run_nagios_plugins
  seboolean: name=logging_syslogd_run_nagios_plugins state=yes persistent=yes
  ignore_errors: true
  when: ansible_distribution_major_version|int <= 7
  become: true

- name: Add nagios to Sudoers
  lineinfile:
    dest: /etc/sudoers
    line: nagios ALL=(ALL)NOPASSWD:ALL

- name: Add nrpe to Sudoers
  lineinfile:
    dest: /etc/sudoers
    line: nrpe ALL=(ALL)NOPASSWD:ALL

- name: Start NRPE RedHat6
  become: true
  service: name={{ item }} state=started enabled=yes
  when: ansible_distribution_major_version|int <= 6 and ansible_os_family == "RedHat"
  with_items:
    - nrpe

- name: Start NRPE RedHat7+
  become: true
  systemd:
    name: "{{ item }}"
    state: started
    daemon_reload: yes
    enabled: yes
  when: ansible_distribution_major_version|int >= 7 and ansible_os_family == "RedHat"
  with_items:
    - nrpe

- name: Start NRPE Ubuntu14
  become: true
  service: name={{ item }} state=started enabled=yes
  when: ansible_distribution_major_version|int <= 14 and ansible_os_family == "Debian"
  with_items:
    - nagios-nrpe-server

- name: Start NRPE service Ubuntu16+
  become: true
  systemd:
    name: "{{ item }}"
    state: started
    daemon_reload: yes
    enabled: yes
  when: ansible_distribution_major_version|int >= 16 and ansible_system == "Linux" and ansible_os_family == "Debian"
  with_items:
    - nagios-nrpe-server

- name: Enable NRPE service on FreeBSD
  lineinfile:
    path: /etc/rc.conf
    line: nrpe3_enable="YES"
    state: present
    backup: yes
  when: ansible_system == "FreeBSD"

- name: Start NRPE service on FreeBSD
  service:
    name: nrpe3
    enabled: yes
    state: started
  when: ansible_system == "FreeBSD"

- name: Create Ceph Auth for nagios
  shell: ceph auth get-or-create client.nagios mon 'allow r' > /etc/nagios/ceph.client.nagios.keyring
  args:
    creates: /etc/nagios/ceph.client.nagios.keyring
  when: inventory_hostname in groups['ceph']
  ignore_errors: true

- name: Fetch Ceph Auth Key for nagios
  fetch:
    src: /etc/nagios/ceph.client.nagios.keyring
    dest: roles/nagios_client/files/ceph.client.nagios.keyring
    flat: true
  when: inventory_hostname in groups['ceph']

- name: Copy Ceph Auth Key to OSD for nagios
  copy:
    src: ceph.client.nagios.keyring
    dest: /etc/nagios/ceph.client.nagios.keyring
  when: inventory_hostname in groups['ceph_osd']

--- # Install Percona-MySql database
- name: Add Percona repository key
  apt_key: keyserver=keys.gnupg.net id=9334A25F8507EFA5 state=present

- name: Add Percona repository
  apt: deb="https://repo.percona.com/apt/percona-release_0.1-4.trusty_all.deb"

- name: Update apt
  apt: update_cache=yes

- name: Install Percona MySQL Server
  environment:
    DEBIAN_FRONTEND: noninteractive
  action: apt pkg={{ item }} state=present
  with_items:
    - "{{ percona_packages }}"

- name: Remove apparmor package
  become: yes
  environment:
    DEBIAN_FRONTEND: noninteractive
  action: apt pkg=apparmor state=absent

- name: Create fnv1a_64
  shell: /usr/bin/mysql -e "CREATE FUNCTION fnv1a_64 RETURNS INTEGER SONAME 'libfnv1a_udf.so'" && touch /var/log/libfnv1a_udf.so.done creates=/var/log/libfnv1a_udf.so.done

- name: Create fnv_64
  shell: /usr/bin/mysql -e "CREATE FUNCTION fnv_64 RETURNS INTEGER SONAME 'libfnv_udf.so'" && touch /var/log/libfnv_udf.so.done creates=/var/log/libfnv_udf.so.done

- name: Create murmur_hash
  shell: /usr/bin/mysql -e "CREATE FUNCTION murmur_hash RETURNS INTEGER SONAME 'libmurmur_udf.so'" && touch /var/log/libmurmur_udf.so.done creates=/var/log/libmurmur_udf.so.done

- name: Update Percona MySQL Server root password
  ignore_errors: true
  mysql_user: name=root host={{ item }} password={{ mysql_root_password }} login_user=root login_password={{ mysql_root_password }} check_implicit_admin=yes
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost

- name: Copy .my.cnf file with root password credentials
  template: src=templates/.my.cnf dest=/root/.my.cnf owner=root mode=0600

- name: Copy wsrep.cnf file to /etc/mysql/conf.d
  template: src=templates/wsrep.cnf.j2 dest=/etc/mysql/conf.d/wsrep.cnf owner=root mode=0600

- name: Generate my.cnf file
  template: src=templates/my.cnf.j2 dest=/etc/mysql/my.cnf owner=root mode=0644

- name: replace user in clusterchk
  lineinfile: name=/usr/bin/clustercheck regexp='^MYSQL_USERNAME=' line="MYSQL_USERNAME="${1-root}""

- name: replace password in clusterchk
  lineinfile: name=/usr/bin/clustercheck regexp='^MYSQL_PASSWORD=' line="MYSQL_PASSWORD="${2-{{ mysql_root_password }}}""

- name: Add Grant Privileges to root
  shell: /usr/bin/mysql -e "GRANT ALL on *.* to 'root'@'%' identified by '"{{ mysql_root_password }}"';"

- name: Remove test database
  ignore_errors: true
  mysql_db: name=test state=absent login_host=localhost login_user=root login_password={{ mysql_root_password }}

- name: Add clusterchk to /etc/services
  lineinfile: dest=/etc/services line='mysqlchk\t9200/tcp\t\t# mysqlchk' state=present

- name: Restart Xinetd
  service: name=xinetd state=restarted enabled=yes

- name: Disable UFW
  service: name=ufw state=stopped enabled=no

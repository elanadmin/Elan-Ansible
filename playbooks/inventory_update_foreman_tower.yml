---
- hosts: localhost
  become: true
  become_user: "{{ run_user | default('awx') }}"

  tasks:
    - debug:
        msg: running as {{ run_user }}
      when: run_user is defined

    - name: check the path
      shell: pwd
      register: path_out

    - name: check the servername
      shell: hostname -f
      register: server_out

    - debug:
        msg: Running from {{ path_out.stdout }} on {{ server_out.stdout }} with {{ lookup('env','PATH') }} using {{ ansible_playbook_python }}

    - name: find the awx project dir
      find:
        paths: /var/lib/awx/projects
        file_type: directory
        use_regex: yes
        patterns: ['^_[0-9]{1,2}__.*_ansible$']
      register: awx_project_dir

    - debug: var=awx_project_dir.files[0].path

    - name: create symlink /home/ansible
      file: src={{ awx_project_dir.files[0].path }} dest=/home/ansible state=link

    - name: setfacl for ansible
      shell: setfacl -m u:ansible:rwx /var/lib/awx/projects
      ignore_errors: true

#    - name: Import AWS Dynamic Inventory to hosts_dynamic
#      shell: python ec2.py --list | python ansible-dynamic-inventory-converter.py
#      args:
#        chdir: ../scripts/dynamic

    - name: Import Foreman Dynamic Inventory to hosts_dynamic
      shell: python foreman.py --list | python ansible-dynamic-inventory-converter.py
      args:
        chdir: ../scripts/dynamic

    - name: Auto Push the Changes
      shell: cd $HOME/projects/_[0-9][0-9]__elan_ansible && git add -A . && git commit -a -m "Auto Push from AWX" && git push origin master
      ignore_errors: true

    - name: Inventory Create in Foreman
      shell: tower-cli inventory create --name elan_foreman_hosts --organization {{ awx_org }}

    - name: Import Inventory from Foreman
      shell: awx-manage inventory_import --inventory-name elan_foreman_hosts --source {{ clone_path }}/foreman.py
      register: import_out
      when: clone_path is defined

    - debug: var=import_out.stdout

    - debug: msg="Please define clone_path in the ExtraVariables of this Job Template"
      when: clone_path is not defined

    - debug: var=import_out.stderr
